name: Auto Build DLL and upload

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      # Set up MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      # Build C++ Project
      - name: Build with MSBuild
        run: msbuild WinInputSimulator.sln /p:Configuration=Release  # Replace with your actual .sln name

    outputs:
      status: "success"

  release:
    needs: build
    if: github.ref == 'refs/heads/master' && needs.build.outputs.status == 'success'
    runs-on: ubuntu-latest
    steps:
      # Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release-${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload DLL to GitHub Release
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WinInputSimulator/bin/Release/WinInputSimulator.dll  # Replace with your actual DLL path
          asset_name: WinInputSimulator.dll  # Replace with your actual DLL name
          asset_content_type: application/x-msdownload
        env:
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
